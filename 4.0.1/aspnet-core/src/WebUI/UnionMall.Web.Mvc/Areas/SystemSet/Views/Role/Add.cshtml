@{
    ViewData["Title"] = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<BusinessDropDownDto> select = ViewData["Business"] as List<BusinessDropDownDto>;

    ViewBag.FirstMenu = "SystemSet";
    ViewBag.SecondMenu = "ManagerRole";
}
@using UnionMall.Business.Business.Dto;
@model UnionMall.Web.Models.Roles.EditRoleModalViewModel
<link href="~/lib/admin/css/plugins/awesome-bootstrap-checkbox/awesome-bootstrap-checkbox.css" rel="stylesheet" />
<link href="~/lib/admin/css/plugins/chosen/bootstrap-chosen.css" rel="stylesheet" asp-append-version="true" />

<style>
    .checkbox {
        padding-top: 0 !important;
        min-height: 0 !important;
    }

    table tbody {
        display: block;
        height: 50vh;
        overflow-y: scroll;
    }

    body tr td {
        border: none !important;
    }

    table thead, tbody tr {
        display: table;
        width: 100%;
        table-layout: fixed;
        border-top: 1px solid #e7eaec;
    }

    body tr td:nth-child(2) {
        width: 10%;
        max-width: 15%;
    }
</style>
<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>@L("Settings")@L("Permissions")<small></small></h5>
                <div class="ibox-tools"></div>
            </div>
            <div class="ibox-content">
                <form method="post" class="form-horizontal" name="Role" action="javascript:void(0);">
                    <input type="hidden" name="Id" value="@Model.Role.Id" />
                    <input type="hidden" name="IsStatic" value="@(Model.Role.IsStatic.ToString())" />
                    <div class="form-group">
                        <label class="col-sm-1 control-label">@L("Roles")@L("Name")</label>
                        <div class="col-sm-3"><input type="text" class="form-control" name="Name" required maxlength="10" value="@Model.Role.Name" /></div>
                    </div>
                    <div class="form-group">
                        <label class="col-sm-1 control-label">@L("Belong")@L("Business")</label>
                        <div class="col-sm-3">
                            <select id="BusinessId" name="BusinessId" required>

                                @foreach (BusinessDropDownDto item in select)
                                {
                                    if (Model.Role.BusinessId == item.Id)
                                    {
                                        <option selected="selected" value="@item.Id">@item.BusinessName</option>
                                    }
                                    else
                                    {
                                        <option value="@item.Id">@item.BusinessName</option>
                                    }

                                }
                            </select>

                            @Html.DropDownListFor(c => c.Role.BusinessId, (SelectList)ViewData["Business"], L("Choose"), new { @class = "input-sm form-control chosen-select", @name = "BusinessId", @style = "padding: 3px 5px;" })
                        </div>


                    </div>
                    <div class="form-group">
                        <label class="col-sm-1 control-label">@L("Introduce")</label>


                        <div class="col-sm-3">
                            <textarea class="form-control" name="Description">@Model.Role.Description</textarea>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-1 control-label">@L("Manage")@L("Roles")</label>

                        <div class="col-sm-10">
                            @if (Model.ManageRole != null && Model.ManageRole.Count() > 0)
                            {
                                @foreach (var item in Model.ManageRole)
                                {
                                    <div class="checkbox checkbox-inline checkbox-success">
                                        <input type="checkbox" id="role@(item.Id)" name="ManageRole"
                                               @(Model.Role.ManageRole != null && Model.Role.ManageRole.Contains(item.Id.ToString()) ? "checked='checked'" : "")
                                               value="@item.Id">
                                        <label for="role@(item.Id)">@item.Name</label>
                                    </div>
                                }
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-sm-1 control-label">@L("Permissions")</label>
                        <div class="col-sm-10">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>@L("Menu")@L("Operate")</th>
                                        <th style="width: 11.5%;max-width: 15%;">@L("Select")</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var first in Model.Permissions.Where(c => c.Name.IndexOf(".") <= 0))
                                    {
                                        <tr>
                                            <td>
                                                <div class="checkbox checkbox-inline checkbox-success">
                                                    <input @(Model.HasPermission(first) ? "checked='checked'" : "") class="ck-first" id="@first.Name" type="checkbox" name="permission" value="@first.Name" />
                                                    <label for="@first.Name"><strong>@L(first.DisplayName)</strong></label>
                                                </div>
                                            </td>
                                        </tr>
                                        @foreach (var second in Model.Permissions.Where(c => c.Name.Contains(first.Name) &&
c.Name.IndexOf(".") == c.Name.LastIndexOf(".") && c.Name.IndexOf(".") == first.Name.Length))
                                        {
                                            <tr class="@first.Name">
                                                <td>
                                                    <div class="checkbox checkbox-inline checkbox-success">
                                                        &nbsp;&nbsp;
                                                        <input id="@second.Name" type="checkbox" @(Model.HasPermission(second) ? "checked='checked'" : "") name="permission" value="@second.Name">
                                                        <label for="@second.Name">@L(second.DisplayName)</label>
                                                    </div>
                                                    @foreach (var action in Model.Permissions.Where(c => c.Name.Contains(second.Name + ".")))
                                                    {
                                                        <div class="checkbox checkbox-inline checkbox-success">

                                                            <input @(Model.HasPermission(action) ? "checked='checked'" : "") id="@action.Name" class="styled" type="checkbox" name="permission" value="@action.Name">
                                                            <label for="@action.Name">@L(action.DisplayName)</label>
                                                        </div>
                                                    }
                                                </td>
                                                <td>
                                                    <div class="checkbox checkbox-inline checkbox-success">
                                                        <input type="checkbox" name="selectAll" value="">
                                                        <label for="selectAll"></label>
                                                    </div>
                                                </td>
                                            </tr>

                                        }
                                    }
                                </tbody>
                            </table>

                        </div>
                    </div>
                    <div class="hr-line-dashed"></div>
                    <div class="form-group">
                        <div class="col-sm-4 col-sm-offset-2">

                            <button class="btn btn-primary" type="submit">@L("Save")</button>
                            <button class="btn btn-white col-md-offset-1" type="button" onclick="javascript: history.back(-1);">@L("Cancel")</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script src="~/lib/jquery-validation/dist/jquery.validate.js" asp-append-version="true"></script>
<script src="~/lib/admin/js/plugins/sweetalert/sweetalert.min.js" asp-append-version="true"></script>
<script src="~/lib/admin/js/plugins/chosen/chosen.jquery.js" asp-append-version="true"></script>
<script src="~/view-resources/Areas/Set/Role.js"></script>
<script>
    function SaveSuccess() {
        swal({
            title: '@L("Save")@L("Success")！',
            type: 'success',
            timer: 3000
        }).then(
            function () { location.href = '/systemset/role/list'; },
            // handling the promise rejection
            function (dismiss) {
                if (dismiss === 'timer') {
                    location.href = '/systemset/role/list';
                }
            }
        )
    }
    $(function () {
        $('.chosen-select').chosen({ width: "100%" });
    });
</script>