
@{

    Layout = null;
}
@using System.Data
@using X.PagedList
@using X.PagedList.Mvc.Core
@model PagedList<DataRow>
@*@if (IsGranted(""))
    {

    }*@
<table id="tree_table" class="table table-bordered table-hover footable">
    <thead>
        <tr>
            <th>@L("Title")</th>
            <th>@L("Sort")</th>
            <th>@L("Note")</th>
            <th>@L("Operate")</th>
        </tr>
    </thead>
    <tbody>
        @foreach (DataRow item in Model.Where(c => c["ParentId"].ToString() == "0"))
        {
            <tr id="@(item["id"])" hasChild="true">
                <td controller="true">@item["Title"]</td>
                <td>@item["Sort"]</td>
                <td>@item["Note"]</td>
                <td>
                    <a class="btn btn-outline btn-primary btn-xs" data-ajax="true" data-ajax-method="GET"
                       data-ajax-mode="Replace" data-ajax-update="#DivAdd" data-ajax-success="EditShow"
                       href="/GoodsManage/Category/Add/@item["id"]">编辑</a>
                    &nbsp;&nbsp;
                    <button type="button" data-name="@item["Title"]" data-id="@item["id"]" onclick="Delete(this);" class="btn btn-outline btn-danger btn-xs">删除</button>
                </td>
            </tr>


        }


    </tbody>
</table>

@Html.PagedListPager(Model, page => Url.Action("Table", new { page }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
        new PagedListRenderOptions {
            MaximumPageNumbersToDisplay = 10,
            DisplayPageCountAndCurrentLocation = true,
            LinkToFirstPageFormat = L("FirstPage"),
            LinkToLastPageFormat = L("LastPage"),
            LinkToNextPageFormat = L("NextPage"),
            PageCountAndCurrentLocationFormat = L("{1}pages{2}Records"),
            LinkToPreviousPageFormat = L("PreviousPage"),
            UlElementClasses = new[] { "pagination col-md-8" },
            ContainerDivClasses = new[] { "row" } },


        new AjaxOptions()
        {
            DataForm = "searchForm",
            LoadingElementDuration = 2,
            LoadingElementId = "loading",
            HttpMethod = "GET",
            UpdateTargetId = "table"
        }
))
<script>
    $(function () {

        var option = {
            theme: 'vsStyle',
            expandLevel: 1,
            beforeExpand: function ($treeTable, id) {
                //判断id是否已经有了孩子节点，如果有了就不再加载，这样就可以起到缓存的作用
                if ($('.' + id, $treeTable).length) { return; }
                //这里的html可以是ajax请求
                var str = "";
                $.post("/GoodsManage/Category/GetChildCategory", { parentId: id }, function (data) {

                    //  console.log(data.result.data[0].title);
                    for (var i = 0; i < data.result.data.length; i++) {
                        var h = " <tr id='" + data.result.data[i].id+"' hasChild='true' pId='" + id + "'>\
                <td controller='true'>"+ data.result.data[i].title + "</td>\
                <td>"+ data.result.data[i].sort + "</td>\
                <td>"+ data.result.data[i].note + "</td>\
                <td>\
                    <a class='btn btn-outline btn-primary btn-xs' data-ajax='true' data-ajax-method='GET'\
                       data-ajax-mode='Replace' data-ajax-update='#DivAdd' data-ajax-success='EditShow'\
                       href='/GoodsManage/Category/Add/"+ data.result.data[i].id + "'>编辑</a>\
                    &nbsp;&nbsp;\
                    <button data-name='"+ data.result.data[i].title + "' data-id='" + data.result.data[i].id +"' type='button' class='btn btn-outline btn-danger btn-xs'>删除</button>\
                </td>\
            </tr>";
                        $treeTable.addChilds(h);
                    }

                });
            },
            onSelect: function ($treeTable, id) {
                window.console && console.log('onSelect:' + id);
            }
        };
        $('#tree_table').treeTable(option);
    });


</script>