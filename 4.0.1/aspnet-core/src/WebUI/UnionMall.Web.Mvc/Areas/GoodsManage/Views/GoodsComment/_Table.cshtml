
@{
    Layout = null;
}
@using X.PagedList
@using System.Data
@using X.PagedList.Mvc.Core
@model PagedList<DataRow>

<div class="ibox-content">

    <div>
        <div class="feed-activity-list">
            @foreach (DataRow item in Model)
            {
                <div class="feed-element">
                    <div class="pull-left" style="text-align:center;">
                        <img alt="image" class="img-circle" src="@item["HeadImg"]" onerror="this.src='/img/avatar-default.png'" />
                        <p><strong>@item["WeChatName"]</strong></p>
                    </div>
                    <div class="media-body ">
                        @{ TimeSpan s = DateTime.Now - Convert.ToDateTime(item["CreationTime"]); }
                        @if (s.TotalMinutes > 0 && s.TotalMinutes <= 1)
                        {
                            <small class="pull-right text-navy">1 @L("Minutes")@L("Ago")</small>
                        }
                        @if (s.TotalMinutes > 1 && s.TotalMinutes <= 60)
                        {
                            <small class="pull-right text-navy">@((int)s.TotalMinutes)@L("Minutes")@L("Ago")</small>
                        }
                        @if (s.TotalHours > 1 && s.TotalHours <= 24)
                        {
                            <small class="pull-right text-navy">@((int)s.TotalHours)@L("Hour")@L("Ago")</small>
                        }
                        @if (s.TotalDays > 1 && s.TotalDays <= 30)
                        {
                            <small class="pull-right text-navy">@((int)s.TotalDays)@L("Day")@L("Ago")</small>
                        }
                        @if (s.TotalDays > 30 && s.TotalDays < 365)
                        {
                            <small class="pull-right text-navy">@(s.TotalDays / 30)@L("Month")@L("Ago")</small>
                        }
                        @if (s.TotalDays >= 365)
                        {
                            <small class="pull-right text-navy">@(s.TotalDays / 365)@L("Year")@L("Ago")</small>
                        }

                        <p>
                            @for (int i = 0; i < Convert.ToInt32(item["CommentGrade"]); i++)
                            {
                                <span style="color:#ffd800;font-size:16px;" class="glyphicon glyphicon-star" aria-hidden="true"></span>

                            }
                            @L("Comment")
                            <strong class="title">"@item["Name"]"</strong>
                        </p>
                        @item["Content"]<br>

                        @if (item["Images"].ToString() != "")
                        {<div class="photos">
                                @for (int i = 0; i < item["Images"].ToString().Split(',').Length; i++)
                                {
                                    <a target="_blank" href="javascript:void(0);">
                                        <img alt="image" class="feed-photo" src="@(item["Images"].ToString().Split(',')[i])">
                                    </a>
                                }
                            </div>
                        }
                        <small class="text-muted">@Convert.ToDateTime(item["CreationTime"]).ToString("yyyy-MM-dd")</small>
                        <div class="actions">
                            <a class="btn btn-xs btn-white"><i class="fa fa-thumbs-up"></i> @L("Praise") @(item["Praise"])</a>
                            <a data-id="@item["id"]" data-count="@item["ReplyCount"]" onclick="GetReply(this);" class="btn btn-xs btn-white">@L("Reply")  @((item["ReplyCount"]))</a>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>

</div>

@Html.PagedListPager(Model, page => Url.Action("List", new { page }),
PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
new PagedListRenderOptions {
MaximumPageNumbersToDisplay = 10,
DisplayPageCountAndCurrentLocation = true,
LinkToFirstPageFormat = L("FirstPage"),
LinkToLastPageFormat = L("LastPage"),
LinkToNextPageFormat = L("NextPage"),
PageCountAndCurrentLocationFormat = L("{1}pages{2}Records"),
LinkToPreviousPageFormat = L("PreviousPage"),
UlElementClasses = new[] { "pagination col-md-8" },
ContainerDivClasses = new[] { "row" } },
new AjaxOptions()
{
DataForm = "searchForm",
HttpMethod = "GET",
UpdateTargetId = "table"
}
))

<script>
    var txt = $("input[name='title']").val().trim();
    if (txt.length > 0) {
        $(".title").each(function () {
            var newTxt = $(this).html().replace(txt, txt.fontcolor("red"));
            $(this).html(newTxt);
        });
    }
    $("input[name='pageSize']").val(@ViewBag.PageSize);
</script>
