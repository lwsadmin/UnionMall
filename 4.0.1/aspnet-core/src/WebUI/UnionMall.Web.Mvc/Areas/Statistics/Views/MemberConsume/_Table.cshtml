
@{
    Layout = null;
}
@using X.PagedList
@using System.Data
@using X.PagedList.Mvc.Core
@model PagedList<DataRow>

<table class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>@L("Consume")@L("Time")</th>
            <th>@L("Order")@L("Number")</th>
            <th>@L("Status")</th>
            <th>@L("Consume")@L("Type")</th>
            <th>@L("Consume")@L("Store")</th>
            <th>@L("Consume")@L("Amount")</th>
            <th>@L("WeChat")@L("Pay")</th>
            <th>@L("AliPay")@L("Pay")</th>
            <th>@L("Balance")@L("Pay")</th>
            <th>@L("Integral")@L("Pay")</th>
            <th>@L("Coupon")@L("Pay")</th>
            <th>@L("Cash")@L("Pay")</th>
            <th>@L("CardID")</th>
            <th>@L("WeChat")@L("Name")</th>
        </tr>

    </thead>
    <tbody>
        @foreach (DataRow item in Model)
        {
            <tr>
                <td class="title">
                    @item["CreationTime"]
                </td>
                <td>@item["BillNumber"]</td>
                @switch (item["Status"].ToString())
                {
                    case "0":
                        <td>@L("Normal")</td>
                        break;
                    case "-1":
                        <td class="text-danger">@L("Revoke")</td>
                        break;
                    default:
                        <td>@item["Status"]</td>
                        break;
                }
                <td>@L(Enum.GetName(typeof(UnionMall.Entity.ConsumeType), item["Type"]))</td>
                <td class="name">@item["Name"]</td>
                <td>@item["TotalPaid"]</td>
                <td>@item["WeChatPay"]</td>
                <td>@item["AliPay"]</td>
                <td>@item["BalancePay"]</td>
                <td>@item["IntegralPay"]</td>
                <td>@item["CouponPay"]</td>
                <td>@item["CashPay"]</td>
                <td>@item["CardID"]</td>
                <td>@item["WeChatName"]</td>
            </tr>
        }

    </tbody>
</table>

@Html.PagedListPager(Model, page => Url.Action("List", new { page }),
PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
new PagedListRenderOptions {
MaximumPageNumbersToDisplay = 10,
DisplayPageCountAndCurrentLocation = true,
LinkToFirstPageFormat = L("FirstPage"),
LinkToLastPageFormat = L("LastPage"),
LinkToNextPageFormat = L("NextPage"),
PageCountAndCurrentLocationFormat = L("{1}pages{2}Records"),
LinkToPreviousPageFormat = L("PreviousPage"),
UlElementClasses = new[] { "pagination col-md-8" },
ContainerDivClasses = new[] { "row" } },
new AjaxOptions()
{
DataForm = "searchForm",
HttpMethod = "GET",
UpdateTargetId = "table"
}
))

<script>
    var txt = $("input[name='orderNumber']").val().trim();
    if (txt.length > 0) {
        $(".title").each(function () {
            var newTxt = $(this).html().replace(txt, txt.fontcolor("red"));
            $(this).html(newTxt);
        });
    }
    var txt = $("input[name='name']").val().trim();
    if (txt.length > 0) {
        $(".name").each(function () {
            var newTxt = $(this).html().replace(txt, txt.fontcolor("red"));
            $(this).html(newTxt);
        });
    }
    $("input[name='pageSize']").val(@ViewBag.PageSize);
</script>
